# Send good 'C-' keys between vim and tmux
set-option -gw xterm-keys on

# Default terminal is 256 color capable 
set -g default-terminal "screen-256color"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# setup 'v' to begin selection
bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of ENTER to also use copy-pipe
unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Mouse mode for scrolling PJC
set-option -g mouse on
# sane scrolling:
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"
# set -g mode-mouse on
# set-option -g mouse-select-pane on
# set-option -g mouse-select-window on
# set -g mouse-resize-pane on

# Remapping prefix to 
set -g prefix C-x
# unbind C-b
bind C-x send-prefix

# Forcing reload of the config file on-the-fly
unbind r
bind r source-file ~/.tmux.conf

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

#### COLOUR (for Solarized dark)

# default statusbar colors
set-option -g status-bg black #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
# set-option -g pane-border-fg black #base02
set-option -g pane-border-fg white #base02
set-option -g pane-active-border-fg brightgreen #base01

# message text
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

# status bar with sound level and battery
set -g status-right-length 80
# set -g status-right "#[fg=yellow]#(./tmux-spotify-info-statusbar) #[fg=yellow]#(./tmux-mail-statusbar) #[fg=yellow]#(zsh $HOME/.volume-status.sh) #[fg=yellow]#(zsh $HOME/.battery-status.sh)"
set -g status-right "#[fg=yellow]#(./tmux-spotify-info-statusbar)"
set -g status-interval 1 

# don't rename windows automatically
set-option -g allow-rename off

# when using <prefix> q to show pane numbers, 
# change the time window to wait for 2000 ms for the user to choose the pane
# to switch to
# set display-panes-time 2000 # 2000 = 2000 ms = 2 s
set-option -g display-panes-time 2000

# Prefix + C-c with switch back to last active pane
bind-key C-c last-pane

# To avoid messages like
#   'The window server could not be contacted...'
# brew install reattach-to-user-namespace
# brew upgrade reattach-to-user-namespace
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# New window with default path set to last path
bind - split-window -v -c "#{pane_current_path}"
bind i split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# PLUGINS 

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-sidebar'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

